# Copyright NTESS. See COPYRIGHT file for details.
#
# SPDX-License-Identifier: MIT

add_test(attached_files "ls" "/")
set_tests_properties(attached_files PROPERTIES ATTACHED_FILES "foo.txt;bar.txt")
add_test(attached_files_on_fail "ls" "/")
set_tests_properties(attached_files_on_fail PROPERTIES ATTACHED_FILES_ON_FAIL "foo.txt;bar.txt")
add_test(cost "ls" "/")
set_tests_properties(cost PROPERTIES COST "1.0")
add_test(depends "ls" "/")
set_tests_properties(depends PROPERTIES DEPENDS "attached_files;cost")
add_test(disabled "ls" "/")
set_tests_properties(disabled PROPERTIES DISABLED 1)
add_test(environment "ls" "/")
set_tests_properties(environment PROPERTIES ENVIRONMENT "SPAM=1;BAZ=2")
# environment_modifications is of the form MYVAR=OP:VALUE
add_test(environment_modification "ls" "/")
set_tests_properties(environment_modification PROPERTIES ENVIRONMENT_MODIFICATION "set=set:set;unset=unset:unset;string_append=string_append:string_append;string_prepend=string_prepend:string_prepend;path_list_append=path_list_append:path_list_append;path_list_prepend=path_list_prepend:path_list_prepend;cmake_list_append=cmake_list_append:cmake_list_append;cmake_list_prepend=cmake_list_prepend:cmake_list_prepend")
add_test(fail_regular_expression "echo" "This test should fail")
set_tests_properties(fail_regular_expression PROPERTIES FAIL_REGULAR_EXPRESSION "This test should fail")
# this will be run after all tests requiring the fixture "Foo"
add_test(fixtures_cleanup "ls" "/")
set_tests_properties(fixtures_cleanup PROPERTIES FIXTURES_CLEANUP Foo)
# runs before
add_test(fixtures_required "ls" "/")
set_tests_properties(fixtures_required PROPERTIES FIXTURES_REQUIRED Foo)
# this will be run before all tests requiring the fixture "Foo"
add_test(fixtures_setup "ls" "/")
set_tests_properties(fixtures_setup PROPERTIES FIXTURES_SETUP Foo)
add_test(generated_resource_spec_file "ls" "/")
set_tests_properties(generated_resource_spec_file PROPERTIES GENERATED_RESOURCE_SPEC_FILE "file.txt")
add_test(labels "ls" "/")
set_tests_properties(labels PROPERTIES LABELS "foo;bar")
add_test(measurement_1 "ls" "/")
set_tests_properties(measurement_1 PROPERTIES MEASUREMENT "foo")
add_test(measurement_2 "ls" "/")
set_tests_properties(measurement_2 PROPERTIES MEASUREMENT "foo=2")
add_test(pass_regular_expression "ls" "/")
set_tests_properties(pass_regular_expression PROPERTIES PASS_REGULAR_EXPRESSION "passed;allgood")
add_test(processor_affinity "ls" "/")
set_tests_properties(processor_affinity PROPERTIES PROCESSOR_AFFINITY 1)
add_test(processors "ls" "/")
set_tests_properties(processors PROPERTIES PROCESSORS "5")
add_test(required_files "ls" "/")
set_tests_properties(required_files PROPERTIES REQUIRED_FILES "foo.txt;baz.txt")
add_test(resource_groups "ls" "/")
set_tests_properties(resource_groups PROPERTIES RESOURCE_GROUPS "5,gpus:1")
add_test(resource_lock "ls" "/")
set_tests_properties(resource_lock PROPERTIES RESOURCE_LOCK "foo.lock")
add_test(run_serial "ls" "/")
set_tests_properties(run_serial PROPERTIES RUN_SERIAL 1)
add_test(skip_regular_expression "ls" "/")
set_tests_properties(skip_regular_expression PROPERTIES SKIP_REGULAR_EXPRESSION "foo;bar")
add_test(skip_return_code "ls" "/")
set_tests_properties(skip_return_code PROPERTIES SKIP_RETURN_CODE 3)
add_test(timeout "sleep" "5.0")
set_tests_properties(timeout PROPERTIES TIMEOUT 1)
add_test(timeout_after_match "sleep" "5.0")
set_tests_properties(timeout_after_match PROPERTIES TIMEOUT_AFTER_MATCH "1;foo")
add_test(timeout_signal "sleep" "5.0")
set_tests_properties(timeout_signal PROPERTIES TIMEOUT "1" TIMEOUT_SIGNAL_NAME "SIGINT" TIMEOUT_SIGNAL_GRACE_PERIOD "2.0")
add_test(will_fail "ls" "/spam-and-eggs")
set_tests_properties(will_fail PROPERTIES WILL_FAIL 1)
add_test(working_directory "ls" "/")
set_tests_properties(working_directory PROPERTIES WORKING_DIRECTORY ".")
add_test(cmake_driven_cmd "cmake" "-DOPTION=VAL1;VAL2" "-DSPAM=BAZ" "-P" "FILE")
