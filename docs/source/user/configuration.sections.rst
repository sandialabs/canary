.. Copyright NTESS. See COPYRIGHT file for details.

   SPDX-License-Identifier: MIT

.. _configuration-sections:

Configuration sections
======================

``canary`` recognizes a

config
------

Set general configuration settings.

.. code-block:: yaml

   config:
     debug: false  # (bool)
     log_level: "INFO"  # (str)

config:multiprocessing
......................

Multiprocessing configuration settings

.. code-block:: yaml

  config:
    multiprocessing:
      context: spawn
      max_tasks_per_child: 1

config:plugins
..............

Plugins to load

.. code-block:: yaml

   config:
     plugins: []  # (list of str)

config:polling_frequency
........................

Frequency to poll running tests from completion

.. code-block:: yaml

   config:
     polling_freqeuncy:
       testcase: 0.05

config:timeout
..............

Set test timeouts based on :ref:`keywords<directive-keywords>`.  The ``fast`` and ``long`` timeouts are applied to tests having ``fast`` or ``long`` :ref:`keywords<directive-keywords>`, otherwise the ``default`` timeout is applied.

.. code-block:: yaml

   config:
     timeout:
       fast: T  # (number or str) default: 30s
       long: T  # (number or str) default: 10m
       default: T  # (number or str) default: 5m

.. note::

  Users can specify custom timeouts associated with keywords by adding them to the ``test:timeout`` configuration. For instance, to set a timeout of 1 second for tests labeled with the ``unit_test`` keyword, simply define the ``test:timeout:unit_test`` setting as follows:

  .. code-block:: yaml

     config:
       timeout:
         unit_test: 1s

  The same can be accomplished on the command line: ``canary -c test:timeout:unit_test:1s ...``.

environment
-----------

Modify environment variables.

.. code-block:: yaml

   environment:
     set:
       var: value # (str) environment variables to set for the test session
     unset:
     - var # (str) environment variables to unset for the test session
     prepend-path:
       PATHNAME: value # (str) prepend value to path variable PATHNAME
     append-path:
       PATHNAME: value # (str) append value to path variable PATHNAME


build
-----

Set build settings.

.. note::

   The build configuration fields should be generated by :ref:`canary's CMake
   integration <integrations-cmake>`.

.. code-block:: yaml

   build:
     type: ... # str
     date: ... # str

     compiler:
       vendor: ... # str
       version: ... # str
       cc: ... # str
       cxx: ... # str
       fc: ... # str

     options:
       opt: ... # str
