[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=64", "setuptools-scm[toml]>=6.2.3" ]

[project]
name = "canary-wm"
description = "canary: application testing with Python"
readme = "README.md"
keywords = [ "test", "unittest" ]
license = { "file" = "LICENSE" }
authors = [
    { name = "Tim Fuller" },
    { name = "Others (See AUTHORS)" },
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 6 - Mature",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
]

dynamic = [ "version" ]
dependencies = [
    "hpc-connect==25.10.7",
    "pluggy>=1.5",
    "psutil",
    "pyyaml",
    "schema",
]

optional-dependencies.dev = [
    "coverage",
    "mypy",
    "pydata-sphinx-theme",
    "pytest",
    "ruff",
    "sphinx",
    "sphinx-design",
    "xmlschema",
]
# backward compatible options that are now either required or builtin to hpc-connect
optional-dependencies.flux = [  ]
optional-dependencies.pbs = [  ]
optional-dependencies.psutil = [  ]
optional-dependencies.requests = [ "requests" ]
optional-dependencies.slurm = [  ]
urls.Documentation = "https://canary-wm.readthedocs.io/en/production/"
urls.Issues = "https://github.com/sandialabs/canary/issues"
urls.Repository = "https://github.com/sandialabs/canary"
scripts.canary = "canary:console_main"
scripts.nvtest = "canary:console_main"

[project.entry-points."canary"]
canary_cmake = "canary_cmake"
canary_gitlab = "canary_gitlab"
canary_hpc = "canary_hpc"
canary_vvtest = "canary_vvtest"

[tool.setuptools.dynamic]
version = { attr = "_canary.util.dynamic_version.__generate_dynamic_version__" }

[tool.ruff]
target-version = "py311"
line-length = 100

format.indent-style = "space"
format.quote-style = "double"
format.line-ending = "auto"
format.skip-magic-trailing-comma = false
format.docstring-code-line-length = "dynamic"
format.docstring-code-format = false
lint.select = [ "F", "I" ]
lint.ignore = [ "E731", "E741", "F841" ]
lint.per-file-ignores."src/_canary/plugins/*/__init__.py" = [ "F401", "F403", "F405" ]
lint.per-file-ignores."src/_canary/plugins/__init__.py" = [ "F401", "F403", "F405" ]
lint.per-file-ignores."src/_canary/third_party/*.py" = [ "F401", "F403", "F405" ]
lint.per-file-ignores."src/canary/__init__.py" = [ "F401" ]
lint.per-file-ignores."src/canary_cmake/third_party/*.py" = [ "F401", "F403", "F405" ]
lint.isort.force-single-line = true

[tool.check-wheel-contents]
# W009: Wheel contains multiple toplevel library entries
ignore = "W009"

[tool.pyproject-fmt]
indent = 4
max_supported_python = "3.14"

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "src/canary_vvtest/tests",
    "src/canary_cmake/tests",
    "src/canary_hpc/tests",
    "src/canary_junit/tests"
]
norecursedirs = "mock"
addopts = "-ra --durations=10"
cache_dir = ".cache/pytest"
python_files = "*.py"
filterwarnings = [ "ignore::DeprecationWarning" ]

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.run]
branch = true
omit = [ "*/third_party/*" ]
source = [ "_canary" ]
command_line = "-m pytest"

[tool.coverage.html]
directory = "html.cov"

[tool.mypy]
exclude = [
    "src/canary/examples/*",
    "src/_canary/third_party/distro.py",
    "src/_canary/third_party/programoutput/*",
    "src/_canary/third_party/monkeypatch.py",
    "src/_canary/third_party/cloudpickle.py",
    "src/_canary/third_party/docstring_parser/*",
    "src/_canary/third_party/imagesvg/*",
]

[[tool.mypy.overrides]]
module = "requests.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "schema.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "networkx.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "yaml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "ruamel.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pygments.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "toml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "contextlib2.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "contextlib2.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "scipy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyinstrument.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "numpy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "imageio.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pkg_resources.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "psutil"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [ "_canary.third_party.*" ]
ignore_errors = true

[tool.ty.src]
exclude = [
    "src/canary/examples",
    "src/canary_cmake/cdash/xmlreporter.py",  # this file raises a bug in ty
    "src/_canary/third_party/distro.py",
    "src/_canary/third_party/programoutput/*",
    "src/_canary/third_party/monkeypatch.py",
    "src/_canary/third_party/cloudpickle.py",
    "src/_canary/third_party/docstring_parser/*",
    "src/_canary/third_party/imagesvg/*",
]
include = ["src"]


[tool.bandit]
skips = [
    "B101",  # ignore asserts
    "B311",  # ignore warnings about random numbers
    "B318",  # xml.dom.minidom.parse to parse XML
    "B324",  # non-cryptographic hashes allowed (they are used to generate IDs only)
    "B404",  # consider security risks when using subprocess module
    "B406",  # xml.sax.saxutils to parse XML
    "B408",  # allow use of xml parsers
    "B603",
    "B607", # start_process_with_partial_path"
]
exclude_dirs = ["src/canary/examples"]
